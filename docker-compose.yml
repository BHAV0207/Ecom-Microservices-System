version: '3.8'

services:
  # Zookeeper (Manages Kafka Brokers)
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - backend

  # Kafka Broker
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - backend

  # User Service
  user-service:
    build:
      context: ./UserService/Backend  
      dockerfile: Dockerfile
    ports:
      - "8000:8000" 
    environment:
      KAFKA_BROKER: "kafka:9092"
    depends_on:
      - kafka
    networks:
      - backend

  # Product Service
  product-service:
    build:
      context: ./ProductService/Backend 
      dockerfile: Dockerfile
    ports:
      - "8002:8002"  
    environment:
      KAFKA_BROKER: "kafka:9092"
    depends_on:
      - kafka
    networks:
      - backend

  # Order Service
  order-service:
    build:
      context: ./OrderService/Backend  
      dockerfile: Dockerfile
    ports:
      - "8001:8001"  
    environment:
      KAFKA_BROKER: "kafka:9092"
    depends_on:
      - kafka
    networks:
      - backend

  # GraphQL Gateway
  graphql-service:
    build:
      context: ./graphql-gateway  
      dockerfile: Dockerfile
    ports:
      - "7000:7000"  
    environment:
      USER_SERVICE_URL: "http://user-service:8000" 
      PRODUCT_SERVICE_URL: "http://product-service:8002"
      ORDER_SERVICE_URL: "http://order-service:8001"
    depends_on:
      - user-service
      - product-service
      - order-service
    networks:
      - backend

networks:
  backend:
    driver: bridge
